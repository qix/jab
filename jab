#!/usr/bin/env python3

import os
import sys
from tooler import (
  Tooler,
  abort,
  bash,
  local,
  shell_quote,
)

import home
import lights
import photo
import sonos

tooler = Tooler()

# Add the submodules
tooler.add_submodule('home', home.tooler)
tooler.add_submodule('lights', lights.tooler)
tooler.add_submodule('photo', photo.tooler)
tooler.add_submodule('sonos', sonos.tooler)

@tooler.command
def movie():
  'disable the screensaver/etc'
  pass

@tooler.command
def off():
  lights.off()

@tooler.command
def notify(message):
  bash('notify-send %s' % shell_quote(message))

@tooler.command
def ssh():
  from tooler.ssh import (
    SshHost,
    SshConnectionPool,
  )
  pool = SshConnectionPool()
  pool.execute(
    [SshHost(
      username='josh',
      host='104.154.80.10',
      nickname='riak30',
      port=22,
    ),
    SshHost(
      username='josh',
      host='104.197.47.104',
      nickname='riak33',
      port=22,
    )],
    'hostname'
  )


@tooler.command
def encrypt(filename=None):
  if filename is not None:
    with open(filename, 'rb') as inf:
      data = inf.read()
  else:
    sys.stderr.write('Encrypt [End with Ctrl-d]\n')
    sys.stderr.write('=========================\n')
    sys.stderr.flush()
    data = sys.stdin.read()
    sys.stderr.write('=========================\n')
    sys.stderr.flush()

  bash('gpg -a --output - --cipher-algo AES256 --symmetric', stdin=data)

@tooler.command
def decrypt(filename=None):
  if filename is not None:
    with open(filename, 'rb') as inf:
      data = inf.read()
  else:
    sys.stderr.write('Decrypt [End with Ctrl-d]\n')
    sys.stderr.write('=========================\n')
    sys.stderr.flush()
    data = sys.stdin.read()
    sys.stderr.write('=========================\n')
    sys.stderr.flush()

  local('gpg -d', stdin=data)

@tooler.command
def cc():
  decrypt(filename='/home/josh/documents/private/cc')

@tooler.command
def screenshot():
  bash('''
filename=`date +"%Y-%m-%d.%H%M%S.png"`
url="http://j.yud.co.za/screenshots/$filename"
tmp=`tempfile --suffix=.png`
S3_CFG=~/.s3cfg-personal

echo "Capturing to: $tmp"
shutter --exit_after_capture --no_session --select --output=$tmp --remove_cursor
if [[ ! -e "$tmp" ]]; then
  msg "Screenshot file not found"
  exit 1
fi

# Clear clipboard and copy url onto it
echo "Uploading to: $url"
xsel -b -c
xsel -p -c
echo $url | xclip -selection clipboard
echo $url | xclip -selection primary

cp $tmp ~/screenshots/$filename
s3cmd --config=$S3_CFG sync /home/josh/screenshots/ s3://j.yud.co.za/screenshots/
echo "Screenshot uploaded."
  ''')
  notify('Screenshot has been uploaded.')

@tooler.command
def warm():
  lights.warm()


if __name__ == '__main__':
  tooler.main()
